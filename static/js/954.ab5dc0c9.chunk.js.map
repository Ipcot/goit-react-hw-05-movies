{"version":3,"file":"static/js/954.ab5dc0c9.chunk.js","mappings":"+LAGaA,GAAUC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,8JACP,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MACrB,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,QAIlB,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,OAAOE,WAIpB,SAAAL,GAAC,OAAIA,EAAEC,MAAME,OAAOE,Y,2GCVpBC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OACE,UAACC,EAAA,EAAD,CAAKC,GAAG,OAAOC,EAAE,SAASb,EAAG,EAAGO,SAZb,SAAAO,GACnBA,EAAEC,iBACF,IAAMC,EAAWF,EAAEG,OAAOC,SAAS,GAAGC,MAAMC,OACxCX,IAAUO,GAAyB,KAAbA,IAI1BT,EAASS,GACTN,EAASM,KAIT,WACE,kBAAOK,KAAK,OAAOC,YAAY,sBAC/B,mBAAQD,KAAK,SAAb,wB,uCCbOE,EAAS,WAAO,IAAD,EAC1B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXnB,EAAK,UAAGgB,EAAaI,IAAI,gBAApB,QAAgC,GAErCC,ECTuB,SAAArB,GAC7B,OAA4CD,EAAAA,EAAAA,UAAS,IAArD,eAAOsB,EAAP,KAAuBC,EAAvB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACM,KAAVvB,IAIJwB,EAAAA,EAAAA,IAAYxB,GAAOyB,KAAKH,KACvB,CAACtB,IAEGqB,EDFgBK,CAAgB1B,GAMvC,OAAKqB,GAKH,UAACnB,EAAA,EAAD,CAAKyB,QAAQ,OAAOC,cAAc,SAAlC,WACE,SAAC/B,EAAD,CAAWC,SAVE,SAAAY,GACfO,EAA0B,KAAVP,EAAe,CAAEV,MAAOU,GAAU,OAWrB,IAA1BW,EAAeQ,QAA0B,KAAV7B,IAC9B,SAACE,EAAA,EAAD,CAAKC,GAAG,KAAKC,EAAE,SAAf,iCAIDiB,EAAeQ,OAAS,IACvB,SAAC3B,EAAA,EAAD,CAAKC,GAAG,KAAKC,EAAE,SAAf,SACGiB,EAAeS,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OAClB,yBACE,SAAC,IAAD,CAASC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMjB,GAA7C,SACGa,KAFIC,WAfV","sources":["pages/Home/Home.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","hooks/useSearchMovie.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavItem = styled(NavLink)`\n  padding: ${p => p.theme.space[2]}px;\n  color: ${p => p.theme.colors.text};\n  text-decoration: none;\n\n  &.active {\n    color: ${p => p.theme.colors.primary};\n  }\n\n  :hover {\n    color: ${p => p.theme.colors.primary};\n  }\n`;\n","import { Box } from 'components/Box/Box';\nimport { useState } from 'react';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newQuery = e.target.elements[0].value.trim();\n    if (query === newQuery || newQuery === '') {\n      return;\n    }\n\n    onSubmit(newQuery);\n    setQuery(newQuery);\n  };\n\n  return (\n    <Box as=\"form\" m=\"0 auto\" p={4} onSubmit={handleSubmit}>\n      <input type=\"text\" placeholder=\"Enter your query\" />\n      <button type=\"submit\">Submit</button>\n    </Box>\n  );\n};\n","// import { Loader } from 'components/Loader';\nimport { SearchBox } from 'components/SearchBox';\nimport { useSearchMovies } from 'hooks/useSearchMovie';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { Box } from 'components/Box/Box';\nimport { NavItem } from 'pages/Home/Home.styled';\n\nexport const Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  const searchedMovies = useSearchMovies(query);\n\n  const onSubmit = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  if (!searchedMovies) {\n    return null;\n  }\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <SearchBox onSubmit={onSubmit} />\n\n      {searchedMovies.length === 0 && query !== '' && (\n        <Box as=\"h3\" m=\"0 auto\">\n          No such movie found\n        </Box>\n      )}\n      {searchedMovies.length > 0 && (\n        <Box as=\"ul\" m=\"0 auto\">\n          {searchedMovies.map(({ title, id }) => (\n            <li key={id}>\n              <NavItem to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </NavItem>\n            </li>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { searchMovie } from 'services/getMovies';\n\nexport const useSearchMovies = query => {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    searchMovie(query).then(setSearchedMovies);\n  }, [query]);\n\n  return searchedMovies;\n};\n"],"names":["NavItem","styled","NavLink","p","theme","space","colors","text","primary","SearchBox","onSubmit","useState","query","setQuery","Box","as","m","e","preventDefault","newQuery","target","elements","value","trim","type","placeholder","Movies","useSearchParams","searchParams","setSearchParams","location","useLocation","get","searchedMovies","setSearchedMovies","useEffect","searchMovie","then","useSearchMovies","display","flexDirection","length","map","title","id","to","state","from"],"sourceRoot":""}